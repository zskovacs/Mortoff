<Project Sdk="Microsoft.NET.Sdk.Web">
	<Import Project="..\..\common.props"></Import>
	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<AssemblyName>Mortoff.WebUI</AssemblyName>
		<RootNamespace>Mortoff.WebUI</RootNamespace>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<SpaRoot>ClientApp\</SpaRoot>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<UserSecretsId>c86ec28d-4f96-4e3e-adda-2f0c931aa782</UserSecretsId>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)' == '' Or '$(Configuration)' == 'Debug'">
		<EnvironmentName>Development</EnvironmentName>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)' != '' AND '$(Configuration)' != 'Debug' ">
		<EnvironmentName>Production</EnvironmentName>
	</PropertyGroup>
	
	<ItemGroup>
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.14.0" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.3" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.3" />
		<PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="6.0.3" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.3">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="6.0.3" />
		<PackageReference Include="NSwag.AspNetCore" Version="13.15.10" />
		<PackageReference Include="NSwag.Core" Version="13.15.10" />
		<PackageReference Include="FluentValidation.AspNetCore" Version="10.4.0" />
		<PackageReference Include="NSwag.MSBuild" Version="13.15.10">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>

		<PackageReference Include="Serilog" Version="2.10.0" />
		<PackageReference Include="Serilog.AspNetCore" Version="5.0.0" />
		<PackageReference Include="Serilog.Settings.Configuration" Version="3.3.0" />
		<PackageReference Include="Serilog.Sinks.Console" Version="4.0.1" />
		<PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Application\Application.csproj" />
	  <ProjectReference Include="..\Common\Common.csproj" />
	  <ProjectReference Include="..\Persistence\Persistence.csproj" />
	  <ProjectReference Include="..\Service\Service.csproj" />
	</ItemGroup>


	<ItemGroup>
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<PropertyGroup>
		<RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
	</PropertyGroup>
	
	<Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' ">
		<Message Importance="High" Text="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
		<Exec WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
		<Delete Files="$(ProjectDir)\obj\$(MSBuildProjectFile).NSwag.targets" />
	</Target>
	
</Project>
